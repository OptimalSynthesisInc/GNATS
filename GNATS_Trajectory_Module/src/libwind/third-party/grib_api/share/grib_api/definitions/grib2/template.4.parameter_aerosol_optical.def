# Copyright 2005-2013 ECMWF.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# 
# In applying this licence, ECMWF does not waive the privileges and immunities granted to it by
# virtue of its status as an intergovernmental organisation nor does it submit to any jurisdiction.
#

label "Parameter information";

#  Parameter category
codetable[1] parameterCategory ('4.1.[discipline:l].table',masterDir,localDir) : dump;

#  Parameter number
codetable[1] parameterNumber ('4.2.[discipline:l].[parameterCategory:l].table',masterDir,localDir) : dump;
meta parameterUnits codetable_units(parameterNumber) : dump;
meta parameterName  codetable_title(parameterNumber) : dump;

# Atmospheric chemical or physical constitutent type
codetable[2] aerosolType ('4.230.table',masterDir,localDir) : dump;

codetable[1] typeOfSizeInterval ('4.91.table',masterDir,localDir) : dump;
alias typeOfIntervalForFirstAndSecondSize=typeOfSizeInterval;

signed[1] scaleFactorOfFirstSize : dump;
signed[4] scaledValueOfFirstSize :dump;
signed[1] scaleFactorOfSecondSize = missing() : can_be_missing,dump;
signed[4] scaledValueOfSecondSize = missing() : can_be_missing,dump;

codetable[1] typeOfWavelengthInterval ('4.91.table',masterDir,localDir) : dump;
alias typeOfIntervalForFirstAndSecondWavelength=typeOfSizeInterval;

# wavelengths in metres
signed[1] scaleFactorOfFirstWavelength : dump;
signed[4] scaledValueOfFirstWavelength : dump;
signed[1] scaleFactorOfSecondWavelength = missing(): can_be_missing,dump;
signed[4] scaledValueOfSecondWavelength = missing(): can_be_missing,dump;

#  Type of generating process
codetable[1] typeOfGeneratingProcess ('4.3.table',masterDir,localDir) : dump;

#  Background generating process identifier
# (defined by originating centre)
unsigned[1] backgroundProcess = 255 : edition_specific;
alias backgroundGeneratingProcessIdentifier=backgroundProcess;


#  Analysis or forecast generating processes identifier
# (defined by originating centre)
unsigned[1] generatingProcessIdentifier  : dump;

#  Hours of observational data cut-off after reference time
# NOTE 1 NOT FOUND
unsigned[2] hoursAfterDataCutoff = missing()  : edition_specific,can_be_missing;
alias hoursAfterReferenceTimeOfDataCutoff=hoursAfterDataCutoff;

#  Minutes of observational data cut-off after reference time
unsigned[1]  minutesAfterDataCutoff = missing() : edition_specific,can_be_missing;
alias minutesAfterReferenceTimeOfDataCutoff=minutesAfterDataCutoff;

#  Indicator of unit of time range
codetable[1] indicatorOfUnitOfTimeRange ('4.4.table',masterDir,localDir)  : dump;
codetable[1] stepUnits 'stepUnits.table' = 1 : transient,dump,no_copy;

#  Forecast time in units defined by octet 18
unsigned[4] forecastTime  : dump;

