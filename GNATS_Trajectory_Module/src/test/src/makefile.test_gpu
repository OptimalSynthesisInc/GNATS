CXX=g++
NVCC=nvcc

USE_GPU=1

# CUDA installation directory.
CUDA_INSTALL_DIR=/usr/local/cuda/targets/x86_64-linux

EXECUTABLE=test_gpu

SOURCES=$(shell find . -name 'test_gpu.cpp')
HEADERS=$(shell find . -name '*.h')

#NEWFUNC_OBJS=$(shell find . -name 'newFunc_*.o')

OBJS=$(SOURCES:.cpp=.o)

NVCC_CFLAGS=-O3 -std=c++11 -arch=sm_30 -lineinfo -Xcompiler '-g -O3 -DUSE_GPU=1 -Wall -Wextra -fopenmp' -Xptxas '-v'

CXXFLAGS=-g -O3 -fPIC -Wall -Wextra

ifeq ($(USE_GPU),1)
CXXFLAGS += -DUSE_GPU=1
else
CXXFLAGS += -UUSE_GPU
endif

LDFLAGS=-L/usr/local/lib -L../lib -L../../../lib -L../../libwind/third-party/hdf5install/lib -L/usr/local/cuda/targets/x86_64-linux/lib
LIBS=-lcudart -ljson-c -lcommon -lcontroller -lpilot -lrg -lcuda_compat -ltg -ltrx -ladb -lghthash -llektor -lfp -lgeomutils -lm -lhdf5 -lz -ldl -lgomp -lairport_layout -lastar -lwind -lgrib_api -lxml++-2.6 -lnats_data -lgpu
INCLUDE_DIRS= \
	-I$(CUDA_INSTALL_DIR)/include \
	-I../include \
	-I../../../include/json-c \
	-I../../../include/libairport_layout \
	-I../../../include/libastar \
	-I../../../include/libcommon \
	-I../../../include/libcontroller \
	-I../../../include/libcuda_compat \
	-I../../../include/libnats_data \
	-I../../../include/libgpu \
	-I../../../include/libadb \
	-I../../../include/libtrx \
	-I../../../include/libgeomutils \
	-I../../../include/librg \
	-I../../../include/libfp \
	-I../../../include/libpilot \
	-I../../../include/libwind \
	-I../../libairport_layout/src \
	-I../../libastar/src \
	-I../../libcommon/src \
	-I../../libcontroller/src \
	-I../../libcuda_compat/src \
	-I../../libadb/src \
	-I../../libtrx/src \
	-I../../libgeomutils/src \
	-I../../librg/src \
	-I../../libtg/src \
	-I../../libfp/src \
	-I../../libpilot/src \
	-I../../libwind/src \
	-I../../libwind/third-party/hdf5install/include

all:
	@echo "Compiling source code...."
	#$(CXX) $(CXXFLAGS) -x c++ $(INCLUDE_DIRS) -c $(SOURCES) -o $(OBJS)
	$(NVCC) $(NVCC_CFLAGS) -x cu $(CPPFLAGS) $(INCLUDE_DIRS) -c $(SOURCES) -o $(OBJS)
	#$(NVCC) $(NVCC_CFLAGS) $(CXXFLAGS) -x cu $(INCLUDE_DIRS) -c $(SOURCES) -o $(OBJS)
	
#	@echo ""
#	@echo "Generating shared library file...."
#	@echo ""
#	$(CXX) $(CXXFLAGS) $(LDFLAGS) $(NEWFUNC_OBJS) -shared -o libNewFunc.so $(LIBS)

	@echo ""
	@echo "Generating executable file...."
	@echo ""
	#$(CXX) $(LDFLAGS) $(EXECUTABLE).o -o $(EXECUTABLE) $(LIBS)
	$(NVCC) $(LDFLAGS) $(EXECUTABLE).o -o $(EXECUTABLE) $(LIBS)

clean:
	rm -rf *.o $(EXECUTABLE)
