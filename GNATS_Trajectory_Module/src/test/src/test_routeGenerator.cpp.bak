#include "tg_api.h"

#include "tg_rap.h"

#include "tg_simulation.h"

#include <sstream>
#include <string>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include <sys/time.h>

using namespace std;

static double delta_timeval(struct timeval& tvend, struct timeval& tvstart) {
	double dsec = tvend.tv_sec - tvstart.tv_sec;
	double dusec = tvend.tv_usec - tvstart.tv_usec;
	return (dsec + dusec / 1000000.); // seconds
}

int main(int argc, char* argv[]) {
	double cur_cycle_execution_period = 0.0;
	double accu_cycle_execution_period = 0.0;

	int num_loops = 1;

	int count = 0;

	tg_init("share", 0, 0);

	while (count < num_loops) {
		struct timeval tv_start, tv_end;
		count++;
printf("*********************************************************************\n");
printf("Loading wind and aircraft --> count = %d *****************************\n", count);
printf("*********************************************************************\n");

		load_rap("share/tg/rap");

	    load_aircraft("share/tg/trx/TRX_DEMO_SFO_PHX_GateToGate.trx", "share/tg/trx/TRX_DEMO_SFO_PHX_mfl.trx");
	    //load_aircraft("share/tg/trx/TRX_DEMO_beta1.0_100rec.trx", "share/tg/trx/TRX_DEMO_beta1.0_100rec_mfl.trx");

	    FacetAirport airport_origin = *(map_airport.at("KSFO"));
	    FacetAirport airport_destination = *(map_airport.at("KPHX"));

	    runRgOptimized(airport_origin,
	    		airport_destination,
				"HYDRR1",
				33000,
				430,
				"/home/oliverchen/Projects/1703/Projects_NATS/1603_RouteGenerator/polygons/MACS_scenario.dat",
				"share/tg/weather20180511_161413.sigmet",
				"share/tg/weather20180511_161413.airep"
				);

/*
		propagate_flights(86400, 30);



		nats_simulation_operator(NATS_SIMULATION_STATUS_START);

		while (true) {
		    int server_runtime_sim_status = get_runtime_sim_status();
		    if (server_runtime_sim_status == NATS_SIMULATION_STATUS_ENDED) {
		        break;
			} else {
		        usleep(1000);
			}
		}
*/

//printf("test_monte_carlo --> main() --> About to destroy_aircraft()\n");
		destroy_aircraft();
//printf("test_monte_carlo --> main() --> About to destroy_rap()\n");
		destroy_rap();
//printf("test_monte_carlo --> main() ending\n");

	} // end - while

	tg_shutdown();

}
