/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_osi_gnats_engine_CEngine */

#ifndef _Included_com_osi_gnats_engine_CEngine
#define _Included_com_osi_gnats_engine_CEngine
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    set_flag_gdb
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_set_1flag_1gdb
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    set_log_level
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_set_1log_1level
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    info
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_info
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    tg_init
 * Signature: (Ljava/lang/String;IIZ)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_tg_1init
  (JNIEnv *, jobject, jstring, jint, jint, jboolean);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    tg_shutdown
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_tg_1shutdown
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    load_rap
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_load_1rap
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    release_rap
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_release_1rap
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    load_aircraft
 * Signature: (Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_load_1aircraft
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    validate_flight_plan_record
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_osi_gnats_engine_CEngine_validate_1flight_1plan_1record
  (JNIEnv *, jobject, jstring, jstring, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    release_aircraft
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_release_1aircraft
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    get_sim_id
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_osi_gnats_engine_CEngine_get_1sim_1id
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    propagate_flights
 * Signature: (FF)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_propagate_1flights__FF
  (JNIEnv *, jobject, jfloat, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    propagate_flights
 * Signature: (FFFF)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_propagate_1flights__FFFF
  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    enableConflictDetectionAndResolution
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_enableConflictDetectionAndResolution
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getCDR_status
 * Signature: ()[[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getCDR_1status
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setCDR_initiation_distance_ft_surface
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_setCDR_1initiation_1distance_1ft_1surface
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setCDR_initiation_distance_ft_terminal
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_setCDR_1initiation_1distance_1ft_1terminal
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setCDR_initiation_distance_ft_enroute
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_setCDR_1initiation_1distance_1ft_1enroute
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setCDR_separation_distance_ft_surface
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_setCDR_1separation_1distance_1ft_1surface
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setCDR_separation_distance_ft_terminal
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_setCDR_1separation_1distance_1ft_1terminal
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setCDR_separation_distance_ft_enroute
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_setCDR_1separation_1distance_1ft_1enroute
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    get_runtime_sim_status
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_get_1runtime_1sim_1status
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    get_curr_sim_time
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_com_osi_gnats_engine_CEngine_get_1curr_1sim_1time
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    get_curr_utc_time
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_osi_gnats_engine_CEngine_get_1curr_1utc_1time
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    get_nextPropagation_utc_time
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_osi_gnats_engine_CEngine_get_1nextPropagation_1utc_1time
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    isRealTime_simulation
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_osi_gnats_engine_CEngine_isRealTime_1simulation
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    get_realTime_simulation_time_step
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_get_1realTime_1simulation_1time_1step
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    sim_start
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_sim_1start__
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    sim_start
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_sim_1start__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    sim_start
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_sim_1start__F
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    sim_startRealTime
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_sim_1startRealTime
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    sim_pause
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_sim_1pause
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    sim_resume
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_sim_1resume__
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    sim_resume
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_sim_1resume__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    sim_resume
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_sim_1resume__F
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    sim_stop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_sim_1stop
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    write_trajectories
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_write_1trajectories
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    clear_trajectories
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_clear_1trajectories
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    request_aircraft
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_request_1aircraft
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    request_groundVehicle
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_request_1groundVehicle
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    externalAircraft_create_trajectory_profile
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;FFDDDDDDLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_externalAircraft_1create_1trajectory_1profile
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring, jstring, jfloat, jfloat, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    externalAircraft_inject_trajectory_state_data
 * Signature: (Ljava/lang/String;DDDDDDLjava/lang/String;J)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_externalAircraft_1inject_1trajectory_1state_1data
  (JNIEnv *, jobject, jstring, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jstring, jlong);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getAircraftAssignee
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_osi_gnats_engine_CEngine_getAircraftAssignee
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getFlightseq_by_Acid
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_getFlightseq_1by_1Acid
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getAllAircraftId
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getAllAircraftId
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getAircraftIds
 * Signature: (Ljava/lang/Float;Ljava/lang/Float;Ljava/lang/Float;Ljava/lang/Float;Ljava/lang/Float;Ljava/lang/Float;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getAircraftIds
  (JNIEnv *, jobject, jobject, jobject, jobject, jobject, jobject, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getAssignedAircraftIds
 * Signature: (Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getAssignedAircraftIds
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    select_aircraft
 * Signature: (ILjava/lang/String;)Lcom/osi/gnats/aircraft/Aircraft;
 */
JNIEXPORT jobject JNICALL Java_com_osi_gnats_engine_CEngine_select_1aircraft
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    synchronize_aircraft_to_server
 * Signature: (Lcom/osi/gnats/aircraft/Aircraft;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_synchronize_1aircraft_1to_1server
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    delay_departure
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_delay_1departure
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getADB_cruiseTas
 * Signature: (Ljava/lang/String;D)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getADB_1cruiseTas
  (JNIEnv *, jobject, jstring, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getADB_climb_descent_Rate
 * Signature: (ZLjava/lang/String;DLjava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getADB_1climb_1descent_1Rate
  (JNIEnv *, jobject, jboolean, jstring, jdouble, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getADB_climb_descent_Tas
 * Signature: (ZLjava/lang/String;D)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getADB_1climb_1descent_1Tas
  (JNIEnv *, jobject, jboolean, jstring, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getCurrentSidStarApproach
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_osi_gnats_engine_CEngine_getCurrentSidStarApproach
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getAllSidsStarsApproaches
 * Signature: (Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getAllSidsStarsApproaches
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getProcedure_leg_names
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getProcedure_1leg_1names
  (JNIEnv *, jobject, jstring, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getWaypoints_in_procedure_leg
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getWaypoints_1in_1procedure_1leg
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getWaypoint_Latitude_Longitude_deg
 * Signature: (Ljava/lang/String;)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_com_osi_gnats_engine_CEngine_getWaypoint_1Latitude_1Longitude_1deg
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getProcedure_alt_1
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getProcedure_1alt_11
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getProcedure_alt_2
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getProcedure_1alt_12
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getProcedure_speed_limit
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getProcedure_1speed_1limit
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getProcedure_alt_desc
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_osi_gnats_engine_CEngine_getProcedure_1alt_1desc
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getProcedure_speed_limit_desc
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_osi_gnats_engine_CEngine_getProcedure_1speed_1limit_1desc
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getGroundWaypointLocation
 * Signature: (Ljava/lang/String;Ljava/lang/String;)[F
 */
JNIEXPORT jfloatArray JNICALL Java_com_osi_gnats_engine_CEngine_getGroundWaypointLocation
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    select_airport
 * Signature: (Ljava/lang/String;)Lcom/osi/gnats/airport/Airport;
 */
JNIEXPORT jobject JNICALL Java_com_osi_gnats_engine_CEngine_select_1airport
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getArrivalAirport
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_osi_gnats_engine_CEngine_getArrivalAirport
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getDepartureAirport
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_osi_gnats_engine_CEngine_getDepartureAirport
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getLocation
 * Signature: (Ljava/lang/String;)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_com_osi_gnats_engine_CEngine_getLocation
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getClosestAirport
 * Signature: (DD)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_osi_gnats_engine_CEngine_getClosestAirport
  (JNIEnv *, jobject, jdouble, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getAirportsWithinMiles
 * Signature: (DDD)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getAirportsWithinMiles
  (JNIEnv *, jobject, jdouble, jdouble, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getFullName
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_osi_gnats_engine_CEngine_getFullName
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getAllRunways
 * Signature: (Ljava/lang/String;)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getAllRunways
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRunwayExits
 * Signature: (Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getRunwayExits
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getLayout_node_map
 * Signature: (Ljava/lang/String;)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getLayout_1node_1map
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getLayout_node_data
 * Signature: (Ljava/lang/String;)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getLayout_1node_1data
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getLayout_links
 * Signature: (Ljava/lang/String;)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getLayout_1links
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getSurface_taxi_plan
 * Signature: (Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getSurface_1taxi_1plan
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    generate_surface_taxi_plan
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_generate_1surface_1taxi_1plan__Ljava_lang_String_2Ljava_lang_String_2Ljava_lang_String_2Ljava_lang_String_2Ljava_lang_String_2
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    generate_surface_taxi_plan
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_generate_1surface_1taxi_1plan__Ljava_lang_String_2Ljava_lang_String_2Ljava_lang_String_2Ljava_lang_String_2Ljava_lang_String_2Ljava_lang_String_2
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    generate_surface_taxi_plan
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[D[D)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_generate_1surface_1taxi_1plan__Ljava_lang_String_2Ljava_lang_String_2Ljava_lang_String_2Ljava_lang_String_2_3D_3D
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring, jdoubleArray, jdoubleArray);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setUser_defined_surface_taxi_plan
 * Signature: (Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setUser_1defined_1surface_1taxi_1plan__Ljava_lang_String_2Ljava_lang_String_2_3Ljava_lang_String_2
  (JNIEnv *, jobject, jstring, jstring, jobjectArray);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setUser_defined_surface_taxi_plan
 * Signature: (Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[D)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setUser_1defined_1surface_1taxi_1plan__Ljava_lang_String_2Ljava_lang_String_2_3Ljava_lang_String_2_3D
  (JNIEnv *, jobject, jstring, jstring, jobjectArray, jdoubleArray);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    get_taxi_route_from_A_To_B
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_get_1taxi_1route_1from_1A_1To_1B
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getDepartureRunway
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_osi_gnats_engine_CEngine_getDepartureRunway
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getArrivalRunway
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_osi_gnats_engine_CEngine_getArrivalRunway
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getTaxi_tas_knots
 * Signature: (Ljava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getTaxi_1tas_1knots
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setTaxi_tas_knots
 * Signature: (Ljava/lang/String;D)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_setTaxi_1tas_1knots
  (JNIEnv *, jobject, jstring, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRunwayEnds
 * Signature: (Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getRunwayEnds
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    controller_setDelayPeriod
 * Signature: (Ljava/lang/String;Ljava/lang/String;F)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_controller_1setDelayPeriod
  (JNIEnv *, jobject, jstring, jstring, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    insertAirborneWaypoint
 * Signature: (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;FFFFLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_insertAirborneWaypoint
  (JNIEnv *, jobject, jstring, jint, jstring, jstring, jfloat, jfloat, jfloat, jfloat, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    deleteAirborneWaypoint
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_deleteAirborneWaypoint
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setTargetWaypoint
 * Signature: (Ljava/lang/String;II)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_setTargetWaypoint
  (JNIEnv *, jobject, jstring, jint, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setControllerAbsence
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setControllerAbsence
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    releaseAircraftHold
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_releaseAircraftHold
  (JNIEnv *, jobject, jstring, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    enableMergingAndSpacingAtMeterFix
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;F)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_enableMergingAndSpacingAtMeterFix
  (JNIEnv *, jobject, jstring, jstring, jstring, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    disableMergingAndSpacingAtMeterFix
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_disableMergingAndSpacingAtMeterFix
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    enableStrategicWeatherAvoidance
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_enableStrategicWeatherAvoidance
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setWeather_pirepFile
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_setWeather_1pirepFile
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setWeather_polygonFile
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_setWeather_1polygonFile
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setWeather_sigmetFile
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_setWeather_1sigmetFile
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setTacticalWeatherAvoidance
 * Signature: (Ljava/lang/String;F)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setTacticalWeatherAvoidance
  (JNIEnv *, jobject, jstring, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    pilot_setActionLag
 * Signature: (Ljava/lang/String;Ljava/lang/String;FFFF)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_pilot_1setActionLag
  (JNIEnv *, jobject, jstring, jstring, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    pilot_setActionRepeat
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)F
 */
JNIEXPORT jfloat JNICALL Java_com_osi_gnats_engine_CEngine_pilot_1setActionRepeat
  (JNIEnv *, jobject, jstring, jstring, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    pilot_skipFlightPhase
 * Signature: (Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_pilot_1skipFlightPhase
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    downloadWeatherFiles
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_downloadWeatherFiles
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getWind
 * Signature: (FFFF)[F
 */
JNIEXPORT jfloatArray JNICALL Java_com_osi_gnats_engine_CEngine_getWind
  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getWeatherPolygons
 * Signature: (Ljava/lang/String;DDDD)[Lcom/osi/gnats/weather/WeatherPolygon;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getWeatherPolygons
  (JNIEnv *, jobject, jstring, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    calculateRelativeVelocity
 * Signature: (DDDDDD)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_calculateRelativeVelocity
  (JNIEnv *, jobject, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    calculateBearing
 * Signature: (DDDD)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_calculateBearing
  (JNIEnv *, jobject, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    calculateDistance
 * Signature: (DDDDDD)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_calculateDistance
  (JNIEnv *, jobject, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    calculateWaypointDistance
 * Signature: (FFFF)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_calculateWaypointDistance
  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getVelocityAlignmentWithRunway
 * Signature: (ILjava/lang/String;Ljava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getVelocityAlignmentWithRunway
  (JNIEnv *, jobject, jint, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getDistanceToRunwayEnd
 * Signature: (ILjava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getDistanceToRunwayEnd
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getDistanceToRunwayThreshold
 * Signature: (ILjava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getDistanceToRunwayThreshold
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRunwayEndpoints
 * Signature: (Ljava/lang/String;Ljava/lang/String;)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getRunwayEndpoints
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getPassengerCount
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_getPassengerCount
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getAircraftCost
 * Signature: (Ljava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getAircraftCost
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setAircraftBookValue
 * Signature: (Ljava/lang/String;D)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setAircraftBookValue
  (JNIEnv *, jobject, jstring, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getAircraftBookValue
 * Signature: (Ljava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getAircraftBookValue
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setCargoWorth
 * Signature: (Ljava/lang/String;D)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setCargoWorth
  (JNIEnv *, jobject, jstring, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getCargoWorth
 * Signature: (Ljava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getCargoWorth
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setPassengerLoadFactor
 * Signature: (Ljava/lang/String;D)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setPassengerLoadFactor
  (JNIEnv *, jobject, jstring, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getPassengerLoadFactor
 * Signature: (Ljava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getPassengerLoadFactor
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setTouchdownPointOnRunway
 * Signature: (Ljava/lang/String;DD)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setTouchdownPointOnRunway
  (JNIEnv *, jobject, jstring, jdouble, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getTouchdownPointOnRunway
 * Signature: (Ljava/lang/String;)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_com_osi_gnats_engine_CEngine_getTouchdownPointOnRunway
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setTakeOffPointOnRunway
 * Signature: (Ljava/lang/String;DD)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setTakeOffPointOnRunway
  (JNIEnv *, jobject, jstring, jdouble, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getTakeOffPointOnRunway
 * Signature: (Ljava/lang/String;)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_com_osi_gnats_engine_CEngine_getTakeOffPointOnRunway
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    load_FlightPhaseSequence
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_load_1FlightPhaseSequence
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    clear_FlightPhaseSequence
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_osi_gnats_engine_CEngine_clear_1FlightPhaseSequence
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    load_aviationOccurenceProfile
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_load_1aviationOccurenceProfile
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    load_flightphase_aviationOccurence_mapping
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_load_1flightphase_1aviationOccurence_1mapping
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setSampleWeatherHazard
 * Signature: ([D)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setSampleWeatherHazard
  (JNIEnv *, jobject, jdoubleArray);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    calculateRisk
 * Signature: (Ljava/lang/String;Z)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_calculateRisk
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setRegionOfRegard
 * Signature: (Ljava/lang/String;[D)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setRegionOfRegard
  (JNIEnv *, jobject, jstring, jdoubleArray);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRegionOfRegard
 * Signature: (Ljava/lang/String;)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getRegionOfRegard
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getAircraftInRegionOfRegard
 * Signature: (Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getAircraftInRegionOfRegard
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getL2Distance
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getL2Distance
  (JNIEnv *, jobject, jstring, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getTimeToObjectOfInterest
 * Signature: (Ljava/lang/String;Ljava/lang/String;FF)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getTimeToObjectOfInterest
  (JNIEnv *, jobject, jstring, jstring, jfloat, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getDistanceToObjectOfInterest
 * Signature: (Ljava/lang/String;Ljava/lang/String;FF)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getDistanceToObjectOfInterest
  (JNIEnv *, jobject, jstring, jstring, jfloat, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getTimeToVehicleContact
 * Signature: (Ljava/lang/String;Ljava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getTimeToVehicleContact
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getTimeToPavementEdge
 * Signature: (Ljava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getTimeToPavementEdge
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRateOfLineOfSightChange
 * Signature: (Ljava/lang/String;Ljava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getRateOfLineOfSightChange
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRateOfApproachToPavementEdge
 * Signature: (Ljava/lang/String;I)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getRateOfApproachToPavementEdge
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRateOfApproachToVehicle
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getRateOfApproachToVehicle
  (JNIEnv *, jobject, jstring, jstring, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRateOfApproachToWaypoint
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getRateOfApproachToWaypoint__Ljava_lang_String_2Ljava_lang_String_2I
  (JNIEnv *, jobject, jstring, jstring, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRateOfApproachToWaypoint
 * Signature: (Ljava/lang/String;FFI)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getRateOfApproachToWaypoint__Ljava_lang_String_2FFI
  (JNIEnv *, jobject, jstring, jfloat, jfloat, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRateOfApproachToEvent
 * Signature: (Ljava/lang/String;FFI)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getRateOfApproachToEvent
  (JNIEnv *, jobject, jstring, jfloat, jfloat, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRateOfApproachToWeatherEvent
 * Signature: (Ljava/lang/String;[D)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getRateOfApproachToWeatherEvent
  (JNIEnv *, jobject, jstring, jdoubleArray);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRateOfApproachToWakeVortex
 * Signature: (Ljava/lang/String;Ljava/lang/String;)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getRateOfApproachToWakeVortex
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRateOfVelocityAlignmentToRunway
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getRateOfVelocityAlignmentToRunway
  (JNIEnv *, jobject, jstring, jstring, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRateOfApproachToRunwayEnd
 * Signature: (Ljava/lang/String;I)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getRateOfApproachToRunwayEnd
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getRateOfApproachToRunwayThreshold
 * Signature: (Ljava/lang/String;I)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getRateOfApproachToRunwayThreshold
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    load_groundVehicle
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_load_1groundVehicle
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    release_groundVehicle
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_release_1groundVehicle
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getAllGroundVehicleIds
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getAllGroundVehicleIds
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getAssignedGroundVehicleIds
 * Signature: (Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getAssignedGroundVehicleIds
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    select_groundVehicle
 * Signature: (ILjava/lang/String;)Lcom/osi/gnats/groundvehicle/GroundVehicle;
 */
JNIEXPORT jobject JNICALL Java_com_osi_gnats_engine_CEngine_select_1groundVehicle
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    synchronize_groundvehicle_to_server
 * Signature: (Lcom/osi/gnats/groundvehicle/GroundVehicle;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_synchronize_1groundvehicle_1to_1server
  (JNIEnv *, jobject, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    externalGroundVehicle_create_trajectory_profile
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;FFFF)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_externalGroundVehicle_1create_1trajectory_1profile
  (JNIEnv *, jobject, jstring, jstring, jstring, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    externalGroundVehicle_inject_trajectory_state_data
 * Signature: (Ljava/lang/String;Ljava/lang/String;FFFF)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_externalGroundVehicle_1inject_1trajectory_1state_1data
  (JNIEnv *, jobject, jstring, jstring, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getCenterCodes
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getCenterCodes
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getCurrentCenter
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_osi_gnats_engine_CEngine_getCurrentCenter
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getFixesInCenter
 * Signature: (Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getFixesInCenter
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setGroundOperatorAbsence
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setGroundOperatorAbsence
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    groundVehicle_setActionLag
 * Signature: (Ljava/lang/String;Ljava/lang/String;FFFF)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_groundVehicle_1setActionLag
  (JNIEnv *, jobject, jstring, jstring, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setVehicleContact
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setVehicleContact
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    groundVehicle_setActionRepeat
 * Signature: (Ljava/lang/String;Ljava/lang/String;)F
 */
JNIEXPORT jfloat JNICALL Java_com_osi_gnats_engine_CEngine_groundVehicle_1setActionRepeat
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    loadTerrainData
 * Signature: (DDDDZ)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_loadTerrainData
  (JNIEnv *, jobject, jdouble, jdouble, jdouble, jdouble, jboolean);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getElevation
 * Signature: (DDZ)D
 */
JNIEXPORT jdouble JNICALL Java_com_osi_gnats_engine_CEngine_getElevation
  (JNIEnv *, jobject, jdouble, jdouble, jboolean);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getElevationMapBounds
 * Signature: (Z)[[D
 */
JNIEXPORT jobjectArray JNICALL Java_com_osi_gnats_engine_CEngine_getElevationMapBounds
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getElevationAreaStats
 * Signature: (DDDDZ)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_com_osi_gnats_engine_CEngine_getElevationAreaStats
  (JNIEnv *, jobject, jdouble, jdouble, jdouble, jdouble, jboolean);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setTerrainProfile
 * Signature: (DDDDD)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setTerrainProfile
  (JNIEnv *, jobject, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    clearTerrainData
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_clearTerrainData
  (JNIEnv *, jobject);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setRadarError
 * Signature: (Ljava/lang/String;Ljava/lang/String;DDDI)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setRadarError
  (JNIEnv *, jobject, jstring, jstring, jdouble, jdouble, jdouble, jint);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    getLineOfSight
 * Signature: (DDDDDDZ)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_com_osi_gnats_engine_CEngine_getLineOfSight
  (JNIEnv *, jobject, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jboolean);

/*
 * Class:     com_osi_gnats_engine_CEngine
 * Method:    setNavigationLocationError
 * Signature: (ILjava/lang/String;Ljava/lang/String;DDDDI)I
 */
JNIEXPORT jint JNICALL Java_com_osi_gnats_engine_CEngine_setNavigationLocationError
  (JNIEnv *, jobject, jint, jstring, jstring, jdouble, jdouble, jdouble, jdouble, jint);

#ifdef __cplusplus
}
#endif
#endif
